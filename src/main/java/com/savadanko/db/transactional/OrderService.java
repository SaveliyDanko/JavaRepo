package com.savadanko.db.transactional;

import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Service
@RequiredArgsConstructor
public class OrderService {

    private final OrderRepository orderRepository;
    private final OrderItemRepository itemRepository;

    // –í–µ—Å—å –º–µ—Ç–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –æ–¥–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    @Transactional
    public void createOrder() {
        Order order = new Order("–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤");

        OrderItem item1 = new OrderItem("–ù–æ—É—Ç–±—É–∫", 1);
        OrderItem item2 = new OrderItem("–ú—ã—à—å", 2);

        order.addItem(item1);
        order.addItem(item2);

        orderRepository.save(order);
        System.out.println("‚úÖ –ó–∞–∫–∞–∑ —Å–æ—Ö—Ä–∞–Ω—ë–Ω, ID = " + order.getId());

        // ‚ùå –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ —Å–æ–∑–¥–∞–¥–∏–º –æ—à–∏–±–∫—É, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å rollback
        if (true) throw new RuntimeException("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞!");

        // –î–æ —Å—é–¥–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –¥–æ–π–¥—ë—Ç
        System.out.println("üí≥ –ü–ª–∞—Ç—ë–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω");
    }
}

